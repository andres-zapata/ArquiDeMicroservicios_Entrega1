swagger: "2.0"
info:
  description: "youtube"
  version: "1.0.0"
  title: "Youtube"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "youtube.swagger.io"
basePath: "/v2"
paths:
  /playlist:
    post:
      tags:
      - "playlist"
      summary: "crea playlist "
      description: ""
      operationId: "creaPlaylist"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "nombre"
        in: "body"
        description: "se crea la lista de reproduccion"
        required: true
        schema:
          $ref: "#/definitions/Playlist"
      responses:
        "405":
          description: "Campos invalidos"
        "200":
          description: "La lista de reproduccion a sido añadida correctamente"
    delete:
      tags:
      - "playlist"
      summary: "Borrar playlist"
      description: ""
      operationId: "deletePlaylist"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Borra lista de reproduccion"
        required: true
        schema:
          $ref: "#/definitions/Video"
      responses:
        "200":
          description: "Operacion exitosa"
          schema:
            $ref: "#/definitions/Video"
        "400":
          description: "ID incorrecto"
        "404":
          description: "Video no encontrado"
    get:
      tags:
      - "playlist"
      summary: "trae la playlist"
      description: ""
      operationId: "getPlaylist"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Obtener la lista de reproduccion"
        required: true
        schema:
          $ref: "#/definitions/Video"
      responses:
        "405":
          description: "Campos invalidos"
        "200":
          description: "El usuario a sido creado correctamente"
  /playlist/{id}/:
    delete:
      tags:
      - "playlist"
      summary: "Borrar un video a partir de su id"
      description: "Para una respuesta correcta se necesita el id del video a encontrar"
      operationId: "deleteVideoById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID del usuario es necesario para la busqueda"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Operacion exitosa"
          schema:
            $ref: "#/definitions/Video"
        "400":
          description: "ID incorrecto"
        "404":
          description: "Video no encontrado"
    post:
      tags:
      - "playlist"
      summary: "añade video by id "
      description: ""
      operationId: "addVideoToPlaylist"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID del usuario es necesario para la busqueda"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "405":
          description: "Campos invalidos"
        "200":
          description: "El video a sido añadido correctamente"
  /profile:
    get:
      tags:
      - "profile"
      summary: "Traer elementos del perfil de usuario"
      description: "Trae todos los elementos asociados a la vista de perfil"
      operationId: "getDataProfile"
      produces:
      - "application/json"
      parameters:
      - name: "profilePhoto"
        in: "query"
        description: "Trae Foto de perfil asociada"
        required: true
        type: "array"
        items:
          type: "string"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Profile"
        "400":
          description: "Foto no encotrada"
    post:
      tags:
      - "profile"
      summary: "crea un nuevo perfil "
      description: ""
      operationId: "addProfile"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        description: "se crea el perfil"
        required: true
        schema:
          $ref: "#/definitions/Profile"
      responses:
        "405":
          description: "Campos invalidos"
        "200":
          description: "El perfil a sido creado correctamente"
  /profile/{id}:
    get:
      tags:
      - "profile"
      summary: "Encontrar un perfil a partir de su id de usuario"
      description: ""
      operationId: "getProfileById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Id de perfil necesaria"
        required: true
        type: "integer"
        maximum: 10.0
        minimum: 1.0
        format: "int64"
      responses:
        "200":
          description: "Ok"
          schema:
            $ref: "#/definitions/User"
        "400":
          description: "ID incorrecto"
        "404":
          description: "Perfil no encontrado"
    put:
      tags:
      - "profile"
      summary: "Actualizar perfil usuario"
      description: ""
      operationId: "updateProfileUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Id del Perfil usuario para modificarlo"
        required: true
        type: "integer"
        maximum: 10.0
        minimum: 1.0
        format: "int64"
      - in: "body"
        name: "body"
        description: "Campos a modificar"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "400":
          description: "id no encontrado"
        "404":
          description: "perfil no existe"
        "405":
          description: "Error"
    delete:
      tags:
        - "profile"
      summary: "Eliminar foto de Perfil"
      description: ""
      operationId: "deleteProfileUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Id Foto de perfil a eliminar"
        required: true
        type: "integer"
        minimum: 1.0
        format: "int64"
      responses:
        "400":
          description: "ID invalida"
        "404":
          description: "Usuario no econtrado"
        "204":
          description: "Eliminado correctamente"
  /videos:
    get:
      tags:
      - "videos"
      summary: "devuelve todos los videos presentes en la aplicación"
      description: "devuelve una lista de los vídeos ordenados por nombre alfabetico"
      operationId: "getVideos"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              format: "int32"
    post:
      tags:
      - "videos"
      summary: "sube un video"
      description: ""
      operationId: "putVideo"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "video a subir"
        required: true
        schema:
          $ref: "#/definitions/Video"
      responses:
        "200":
          description: "archivo cargado con éxito"
        "400":
          description: "fallo al subir el archivo"
  /videos/{videoId}:
    delete:
      tags:
      - "videos"
      summary: "elimina vídeo"
      description: "elimina el vídeo ingresado por parámetro"
      operationId: "delVideo"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "videoId"
        description: "vídeo a borrar"
        type: "integer"
        required: true
        format: "int64"
      responses:
        "200":
          description: "archivo eliminado con éxito"
        "400":
          description: "No se puede eliminar el archivo"
        "404":
          description: "no se encuentra el archivo a eliminar"
    get:
      tags:
      - "videos"
      summary: "entrega video"
      description: "busca en específico el vídeo contenido en el parámetro"
      operationId: "srchVideo"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "videoId"
        description: "vídeo a borrar"
        type: "integer"
        required: true
        format: "int64"
      responses:
        "200":
          description: "archivo encontrado"
        "404":
          description: "no se encuentra el archivo"
    put:
      tags:
      - "videos"
      summary: "edita video"
      description: "edita los parámetros del vídeo contenido en los parámetros"
      operationId: "editVideo"
      produces:
      - "application/json"
      parameters:
      - name: "videoId"
        in: "path"
        description: "vídeo a borrar"
        type: "integer"
        required: true
        format: "int64"
      - in: "body"
        name: "body"
        description: "edición de video"
        required: true
        schema:
          $ref: "#/definitions/Video"
      responses:
        "200":
          description: "archivo editado con éxito"
        "400":
          description: "no se pudo editar el vídeo"
        "404":
          description: "no se encuentra el archivo a editar"
  /user:
    post:
      tags:
      - "user"
      summary: "Añadir un nuevo usuario"
      description: ""
      operationId: "addUser"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Los usuarios deben ser almacenados en la bd"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "405":
          description: "Campos invalidos"
        "200":
          description: "El usuario a sido creado correctamente"
    get:
      tags:
      - "user"
      summary: "Listar todos los usuarios"
      description: ""
      operationId: "getUsers"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      responses:
        "400":
          description: "Solicitud incorrecta"
        "200":
          description: "Listado exitoso"
  /user/{id}/:
    get:
      tags:
      - "user"
      summary: "Encontrar un usuario a partir de su id"
      description: "Para una respuesta correcta se necesita el id del usuario a encontrar"
      operationId: "getUserById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID del usuario es necesario para la busqueda"
        required: true
        type: "integer"
        maximum: 10.0
        minimum: 1.0
        format: "int64"
      responses:
        "200":
          description: "Operacion exitosa"
          schema:
            $ref: "#/definitions/User"
        "400":
          description: "ID incorrecto"
        "404":
          description: "Usuario no encontrado"
    put:
      tags:
      - "user"
      summary: "Actulizar usuarios exitestentes"
      description: "Para una respuesta correcta se necesita el id del usuario a modificar"
      operationId: "updateUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID del usuario para modificarlo"
        required: true
        type: "integer"
        maximum: 10.0
        minimum: 1.0
        format: "int64"
      - in: "body"
        name: "body"
        description: "Campos a modificar"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "400":
          description: "Id de usuario no entregado"
        "404":
          description: "El usuario no existe"
        "405":
          description: "Solicitud Erronea"
    delete:
      tags:
        - "user"
      summary: "Eliminar un usuario a traves de su ID"
      description: "Para una respuesta exitosa, provea un ID existente"
      operationId: "deleteUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID del usurario que sera borrado"
        required: true
        type: "integer"
        minimum: 1.0
        format: "int64"
      responses:
        "400":
          description: "ID invalida"
        "404":
          description: "Usuario no econtrado"
        "204":
          description: "Eliminado correctamente"
definitions:
  Video: 
    type: "object"
    required:
    - "ruta"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "cumpleaños de lillo"
    xml:
      name: "Video"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
    xml:
      name: "User"
  Profile:
    type: "object"
    required:
    - "name"
    - "photoUrls"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      user:
        $ref: "#/definitions/User"
      Playlist:
        type: "array"
        xml:
          name: "Playlist"
          wrapped: true
        items:
          $ref: "#/definitions/Playlist"
    xml:
      name: "Profile"
  Playlist:
    type: "object"
    required:
    - "name"
    - "videoId"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      video:
        type: "array"
        xml:
          name: "videos"
          wrapped: true
        items:
          $ref: "#/definitions/Video"
    xml:
      name: "Profile"

externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"